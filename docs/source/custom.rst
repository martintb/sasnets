****************************
Working With Custom Datasets
****************************

SASNets is designed to be relatively easy to extend to any kind of data. This page describes how to use different SANS and SAXS datasets, as well as completely different datasets.

SASModels
^^^^^^^^^

SASNets makes use of data generated by a custom fork of SASModels, which contains the custom models used inside SASView. Generating your own SANS data is easy: just run
::

  ./gen_models.sh <models> <number> <dim> <npoints> <cutoff> <precision>

where:
* models is the models that are to be run, or a class of models.
* number is the number of distinct models to generate.
* dim is the dimensionality of data (1D or 2D).
* npoints is the number of points per model.
* cutoff is the polydisperse cutoff, or 'mono'.
* precision is the precision level.

More information on these parameters can be found at http://sasview.org/docs.

The gen_models.sh script is short:

.. code-block:: bash
  :linenos:

  #!/bin/bash
  sasview=( ../sasview/build/lib.* )
  sep=$(python -c "import os;print(os.pathsep)")
  PYTHONPATH=../bumps${sep}../periodictable${sep}$sasview
  export PYTHONPATH
  PYOPENCL_COMPILER_OUTPUT=1; export PYOPENCL_COMPILER_OUTPUT
  PYOPENCL_CTX=2; export PYOPENCL_CTX
  python -m sasmodels.generate_sets $*

It first sets the location of sasview, bumps and periodictable, which are used in generating data for models (lines 2 through 5). 
