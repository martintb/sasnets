"""
Utility script that uploads data files to a python script.

Reads files generated by sasmodels and uploads the individual data sessions
to a postgres database running on localhost. Slow.
"""
from __future__ import print_function

import argparse
import sys
from contextlib import closing

from .. import sas_io

parser = argparse.ArgumentParser()
parser.add_argument(
    "--database", type=str, default=sas_io.DB_FILE,
    help="Path to the sqlite database file.")
parser.add_argument(
    "--tag", type=str, default="train",
    help="Tag for the generated data: train or test.")
parser.add_argument(
    "--format", choices=('csv', 'json'), default="csv",
    help="File format to read.")
parser.add_argument(
    "-v", "--verbose",
    help="Verbose output level.", choices=[0, 1, 2])
parser.add_argument("-c", "--create", help="Create new db", action="store_true")
parser.add_argument("path", help="Relative or absolute path to a folder "
                                 "containing data files")

def main(args):
    """
    Main function. Args should conform to the argparse args specified.

    :param args: Arguments from the command line
    :return: None
    """
    opts = parser.parse_args(args)
    conn = sas_io.sql_connect(opts.database)
    with conn, closing(conn.cursor()) as cursor:
        if opts.create:
            assert opts.key.isindentifier()
            cursor.execute(f"""
                CREATE TABLE {opts.key}
                (Name TEXT NOT NULL, Num INTEGER NOT NULL, Q TEXT NOT NULL,
                IQ TEXT NOT NULL)""")
        ifiles = sas_io.iread_1d(
            opts.path, tag=opts.tag, format=opts.format, verbose=opts.verbose)
        for iq, model in ifiles:
            cursor.execute(
                f"INSERT INTO {opts.tag} (iq, model) VALUES (%S, %S)",
                (iq, model))

if __name__ == "__main__":
    main(sys.argv[1:])
